.TH printf 3 "June 2025" "Holberton School" "Library Functions Manual"
.SH NAME
printf — formatted output conversion

.SH SYNOPSIS
.B #include "main.h"
.BI "int _printf(const char *" format ", ...);"

.SH DESCRIPTION
.B _printf
writes output to standard output (stdout) under the control of a
.B format
string that specifies how subsequent arguments (or arguments accessed via
.B va_arg
in the variadic function) are converted for output.

The format string is composed of zero or more directives: ordinary characters
(printed as-is) and conversion specifications, each of which results in fetching
zero or more arguments. Conversion specifications begin with a ‘%B%’ character.

.SH CONVERSION SPECIFIERS
The following conversion specifiers are supported:
.TP
.B %c
Prints a single character.
.TP
.B %s
Prints a string of characters.
.TP
.B %d, %i
Prints a signed integer in decimal notation.
.TP
.B %%
Prints a literal ‘%B%’ character.

.SH RETURN VALUE
.B _printf
returns the total number of characters printed (excluding the null byte used to
end output to strings). If an output error is encountered, the function returns
.B -1.

.SH ERRORS
.B _printf
returns -1 if:
.IP \(bu
The format string is NULL.
.IP \(bu
A conversion specifier is incomplete (e.g., ends with a single ‘%B%’).

.SH EXAMPLES
.TP
.B Example 1:
Printing a string and a number:
.PP
.EX
_printf("Hello, %s! You are %d years old.\n", "Alice", 30);
\-> Output: Hello, Alice! You are 30 years old.
.EE

.SH SEE ALSO
.B printf(3),
.B sprintf(3),
.B fprintf(3)

.SH AUTHORS
Written by Holberton School students as part of the C curriculum.

